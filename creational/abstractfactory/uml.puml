@startuml

class Client {
    factory:IAbstractFactory
}

interface IAbstractFactory {
    createText(x:number, y:number, text:string):ITextWidget
    createImage(x:number, y:number, url:string):IImageWidget
}

interface ITextWidget {
}

interface IImageWidget {
}

abstract class AbstractFactory implements IAbstractFactory {
}

class DesktopFactory extends AbstractFactory {
}

class MobileFactory extends AbstractFactory {
}

class DesktopTextWidget implements ITextWidget {
}

class DesktopImageWidget implements IImageWidget {
}

class MobileTextWidget implements ITextWidget {
}

class MobileImageWidget implements IImageWidget {
}

Client -> IAbstractFactory

DesktopFactory --> DesktopTextWidget
DesktopFactory --> DesktopImageWidget

MobileFactory --> MobileTextWidget
MobileFactory --> MobileImageWidget

@enduml